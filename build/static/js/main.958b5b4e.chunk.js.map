{"version":3,"sources":["assets/images/loader.gif","components/Navbar/Navbar.js","components/Footer/Footer.js","Containers/LandingPage/LandingPage.js","Containers/Signup/Signup.js","Containers/Signin/Signin.js","components/UserNav/UserNav.js","Containers/CreateArticle/CreateArticle.js","Containers/GifUpload/GifUpload.js","components/Loader.js","Containers/MyFeeds/MyFeeds.js","Containers/Timeline/Timeline.js","components/NotFound/NotFound.js","routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","activeClassName","Component","Footer","LandingPage","Signup","formInput","e","bodyValue","state","target","name","value","setState","handleFormSubmit","a","fetch","method","body","JSON","stringify","headers","then","res","json","catch","console","log","response","NotificationManager","error","loading","success","props","history","push","localStorage","setItem","data","token","authorId","firstName","lastName","email","password","gender","jobRole","department","address","this","onSubmit","preventDefault","type","placeholder","onChange","Signin","fieldData","UserNav","onClick","removeItem","ArticlePage","title","article","model","content","onModelChanhe","handleModelChange","baseUrl","GifUpload","handleFileUpload","files","substr","size","toFixed","gif","fileProp","handleGifTitle","gifTitle","handleGifPost","gifAuthorId","getItem","FormData","append","window","location","id","style","display","htmlFor","Loader","src","spinner","margin","width","alt","MyFeeds","handleArticleDelete","status","handleGifDelete","myFeeds","myGifs","articles","gifs","parseInt","map","i","authorid","key","createdon","articleid","gifauthorid","image","giftitle","gifcreatedon","gifid","Timeline","articleFeeds","gifFeeds","NotFound","Routes","exact","path","component","CreateArticle","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.958b5b4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.e8453471.gif\";","import React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component {\r\n    render () {\r\n        return (\r\n            <header>\r\n                <nav className='main-nav'>\r\n                    <Link to='/' className='app-name'>Team App</Link>\r\n                    <ul className='sub-nav'>\r\n                        <li><NavLink activeClassName='active' to='/register'>Register</NavLink></li>\r\n                        <li><NavLink activeClassName='active' to='login'>Login</NavLink></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>By Mohammed Ibrahim</p> | <p>DevCAndela</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <h1>Hello</h1>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nimport './Signup.css';\r\n\r\nclass Signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading: false,\r\n            bodyValue: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                password: '',\r\n                gender: '',\r\n                jobRole: '',\r\n                department: '',\r\n                address: ''\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    formInput = (e) => {\r\n        let bodyValue = { ...this.state.bodyValue };\r\n        bodyValue[e.target.name] = e.target.value;\r\n\r\n\r\n        this.setState({\r\n            bodyValue: bodyValue\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = async () => {\r\n        const response = await fetch('https://team-work-api.herokuapp.com/api/v1/auth/create-user', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ ...this.state.bodyValue }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => {\r\n                // return console.log('hello')\r\n                console.log(e)\r\n            })\r\n\r\n        // notifications\r\n        if(!response) {\r\n            return NotificationManager.error('check your internet connection', 'Connection error!', 3000);\r\n        }\r\n        if (response.error === 'user already exist') {\r\n            return NotificationManager.error('user already exist', 'User exists!', 3000);\r\n        }\r\n        else if(response.error === 'all fields are required') {\r\n            return NotificationManager.error('all fields are required', 'Input error!', 3000);\r\n        }\r\n        else if(response.error === 'gender input length should be more than three characters') {\r\n            return NotificationManager.error('gender type should be more than three characters', 'Input error!', 3000);\r\n        }\r\n        else if(response.error === 'password length should be more than six characters') {\r\n            return NotificationManager.error('password length should be more than six characters', 'Input error!', 3000);\r\n        }\r\n        else if(response.error === 'invalid email format') {\r\n            return NotificationManager.error('invalid email format', 'Input error!', 3000);\r\n        }\r\n        else {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n            NotificationManager.success('sign up successfull', 'Successful!', 3000);\r\n            this.props.history.push('/feeds')\r\n        }\r\n\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('id', response.data.authorId);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className='form-container'>\r\n                    <h2 className='reg'>Register for free</h2>\r\n                    <form onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        this.handleFormSubmit();\r\n                        console.log(this.state.bodyValue)\r\n                    }}>\r\n                        <div>\r\n                            <input type='text' name='firstName' placeholder='First name' onChange={this.formInput} />\r\n                            <input type='text' name='lastName' placeholder='Last name' onChange={this.formInput} />\r\n                        </div>\r\n                        <div>\r\n                            <input type='email' name='email' placeholder='User@mail.com' onChange={this.formInput} />\r\n                            <input type='password' name='password' placeholder='******' onChange={this.formInput} />\r\n                        </div>\r\n                        <input type='text' name='gender' placeholder='Gender' className='info' onChange={this.formInput} /><br />\r\n                        <input type='text' name='jobRole' placeholder='Jobrole' className='info' onChange={this.formInput} /><br />\r\n                        <input type='text' name='department' placeholder='Department' className='info' onChange={this.formInput} /><br />\r\n                        <input type='text' name='address' placeholder='Address' className='info' onChange={this.formInput} /><br />\r\n                        {loading ? (<button className='btn-reg'>loading ...</button>) : (<button className='btn-reg'>Register</button>)}\r\n                    </form>\r\n                    <p>Already have an accout? please <Link to='/login'>login</Link></p>\r\n                </div>\r\n                <Footer />\r\n            </div>   \r\n        );\r\n    }\r\n};\r\n\r\nexport default Signup;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport './Signin.css';\r\n\r\nclass Signin extends Component {\r\n    constructor () {\r\n        super();\r\n    this.state = {\r\n        bodyValue: {\r\n           email: '',\r\n           password: ''\r\n        }\r\n    }\r\n   }\r\n\r\n\r\n   formInput = (e) => {\r\n       let fieldData = {...this.state.bodyValue};\r\n       fieldData[e.target.name] = e.target.value;\r\n\r\n       this.setState({\r\n          bodyValue: fieldData\r\n       })\r\n   }\r\n\r\n   handleFormSubmit = async () => {\r\n       const response = await fetch('https://team-work-api.herokuapp.com/api/v1/auth/signin', {\r\n           method: 'POST',\r\n           body: JSON.stringify({...this.state.bodyValue}),\r\n           headers: {\r\n               'Content-Type': 'application/json'\r\n           }\r\n       })\r\n       .then(res => res.json())\r\n       .catch(e => console.log(e));\r\n\r\n       // notifications\r\n       if(!response) {\r\n           return NotificationManager.error('check your connection', 'Connection error!', 3000);\r\n       }\r\n       if(response.error === 'email does not exist, please sign up'){\r\n        return NotificationManager.error('user does not exist, please sign up', 'Error!', 3000);\r\n       }\r\n       else if(response.error === 'all fields are required') {\r\n        return NotificationManager.error('all fields are required', 'Input error!', 3000);\r\n       }\r\n       else{\r\n        NotificationManager.success('log in successful', 'Successful!', 3000);\r\n        this.props.history.push('/feeds')\r\n       }\r\n\r\n       localStorage.setItem('token', response.data.token);\r\n       localStorage.setItem('id', response.data.authorId);\r\n   }\r\n\r\n   render () {\r\n    return (\r\n        <div>\r\n         <Navbar />\r\n         <div className='signin-form-container'>\r\n         <h2 className='reg'>Welcome back</h2>\r\n            <form onSubmit={(e)=> {\r\n                e.preventDefault();\r\n                this.handleFormSubmit();\r\n            }}>\r\n                <input type='email' placeholder='User@mail.com' name='email' className='details' onChange={this.formInput} /><br />\r\n                <input type='password' placeholder='******' name='password' className='details' onChange={this.formInput} /><br />\r\n                <button className='btn-reg'>Log in</button>\r\n            </form>\r\n            <p>You don't have an accout? please <Link to='/register'>Signup</Link></p> \r\n         </div>\r\n         <Footer />\r\n        </div>\r\n    );\r\n   }\r\n};\r\n\r\nexport default Signin;","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './Usernav.css';\r\n\r\nconst UserNav = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n        <nav className='user-nav'>\r\n            <Link to='/feeds' className='app-name app'>Team App</Link>\r\n            <ul>\r\n                <li><NavLink activeClassName='active' to='/feeds'>Timeline</NavLink></li>\r\n                <li><NavLink activeClassName='active' to='/article'>Post Article</NavLink></li>\r\n                <li><NavLink activeClassName='active' to='/gif'>Post Gif</NavLink></li>\r\n                <li><NavLink activeClassName='active' to='/posts'>My Posts</NavLink></li>\r\n                <li onClick={() => {localStorage.removeItem('token'); localStorage.removeItem('id')}}><Link to='/'>Log Out</Link></li>\r\n            </ul>\r\n        </nav>\r\n        </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserNav;","import React, {Component} from 'react';\r\nimport FroalaEditor from 'react-froala-wysiwyg';\r\n// Require Editor JS files.\r\nimport 'froala-editor/js/froala_editor.pkgd.min.js';\r\n\r\n// Require Editor CSS files.\r\nimport 'froala-editor/css/froala_style.min.css';\r\nimport 'froala-editor/css/froala_editor.pkgd.min.css';\r\n\r\n// Require Font Awesome.\r\n// import 'font-awesome/css/font-awesome.css';\r\n\r\n\r\nimport UserNav from '../../components/UserNav/UserNav';\r\n\r\nimport './CreateArticle.css';\r\n\r\nclass ArticlePage extends Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            bodyValue: {\r\n                title: '',\r\n                article: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    formInput = (e) => {\r\n       let fieldData = {...this.state.bodyValue};\r\n       fieldData[e.target.name] = e.target.value;\r\n\r\n       this.setState({\r\n           bodyValue: fieldData\r\n       })\r\n\r\n       console.log(fieldData)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='container'>\r\n                <UserNav />\r\n                <div className='write-article'>\r\n                    <h1 className='header'>Write Your Article</h1>\r\n                    <form>\r\n                    <input type='text' placeholder='Article Title' name='title' className='title' onChange={this.formInput} />\r\n                    <div className='textarea'>\r\n                    <FroalaEditor name='article' model={this.state.content} onModelChanhe={this.handleModelChange} />\r\n                    </div>\r\n                <button className='btn-upload'>Publish</button>\r\n                </form>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ArticlePage;","import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport UserNav from '../../components/UserNav/UserNav';\r\nimport './GifUpload.css';\r\nimport '../../assets/Actions/Upload';\r\n\r\n// loader\r\n// import Loader from '../../components/Loader';\r\n\r\nconst baseUrl = 'https://team-work-api.herokuapp.com/api/v1';\r\n\r\nclass GifUpload extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      gif: null,\r\n      gifTitle: '',\r\n      fileProp : {\r\n        name: '',\r\n        size: ''\r\n      },\r\n      token: ''\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    this.setState({\r\n      token: token\r\n    })\r\n    if(!token) {\r\n      window.location = 'http://localhost:3000/login';\r\n    }\r\n  }\r\n\r\n  handleFileUpload = (e) => {\r\n      if(!e.target.files[0]) {\r\n        return console.log('file upload was cancelled')\r\n      }\r\n      \r\n      let name = e.target.files[0].name.substr(0, 15);\r\n      let size = e.target.files[0].size;\r\n\r\n      if (size <= 1000) {\r\n        size = `${size.toFixed(1)} bytes`;\r\n      } \r\n      else if (size > 1000 && size <= 1000000) {\r\n        size = `${(size / 1000).toFixed(1)} kb`;\r\n      }\r\n      else if (size > 1000000 && size <= 1000000000) {\r\n        size = `${(size / 1000000).toFixed(1)} mb`;\r\n      }\r\n\r\n      \r\n      this.setState({\r\n        gif: e.target.files[0],\r\n        fileProp : {\r\n          name: name,\r\n          size: size\r\n        }\r\n      })\r\n  }\r\n\r\n  handleGifTitle = (e) => {\r\n    this.setState({\r\n        gifTitle: e.target.value\r\n    })\r\n  }\r\n\r\n  handleGifPost = async () => {\r\n    const gifAuthorId = localStorage.getItem('id');\r\n   \r\n    const data = new FormData();\r\n    data.append('gif', this.state.gif, this.state.gif.name);\r\n    data.append('gifTitle', this.state.gifTitle);\r\n    data.append('gifAuthorId', gifAuthorId);\r\n\r\n     const response = await fetch(`${baseUrl}/gifs`, {\r\n       method: 'POST',\r\n       body: data,\r\n       headers: {\r\n         'authorization': `bearer ${this.state.token}`\r\n       }\r\n     })\r\n     .then(res => res.json())\r\n     .catch(e => console.log(e))\r\n\r\n      // notifications\r\n      if(!response) {\r\n        return NotificationManager.error('check your internet connection', 'Connection error!', 3000);\r\n    }\r\n     if(response.error === 'image upload must be a gif') {\r\n      return NotificationManager.error('image upload must be a gif', 'Error!', 3000);\r\n     }\r\n     else if(response.error === 'all fields are required') {\r\n      return NotificationManager.error('upload a gif and add a title', 'Error!', 3000);\r\n     }\r\n     else {\r\n      return NotificationManager.success('gif image successfully posted', 'Successful!', 3000);\r\n     }\r\n     \r\n  } \r\n\r\n\r\n render () {\r\n   const { name, size } = this.state.fileProp;\r\n\r\n  return (\r\n    <div className='container'>\r\n  <UserNav />\r\n     <div className='gif-upload-container'>\r\n         <h1 className='header'>Upload A Gif</h1>\r\n         <div className='upload-gif'>\r\n           <input type='file' className='input' id='file' style={{display: 'none'}} onChange={(e) => {\r\n            this.handleFileUpload(e);\r\n       }} />\r\n       <label htmlFor='file'>\r\n       <i className=\"fas fa-plus-circle\"></i>\r\n       </label>\r\n       <input type='text' placeholder='Gif title' className='title' onChange={(e) => this.handleGifTitle(e)}/>\r\n       <div className='preview' >\r\n         <p>{name ? name : 'gif name'}</p>\r\n         <p>{size ? size : 'gif size'}</p>\r\n       </div>\r\n       <button className='btn-upload' onClick={(e) => this.handleGifPost(e)}>Upload</button>\r\n         \r\n         </div>\r\n     </div>\r\n    </div>\r\n);\r\n }\r\n  \r\n};\r\n\r\nexport default GifUpload;","import React, { Component } from 'react';\r\nimport spinner from '../assets/images/loader.gif';\r\n\r\n\r\nclass Loader extends Component {\r\n  render () {\r\n      return (\r\n      <div>\r\n          <img src={spinner} style={{margin: '10em auto', display: 'block', width: '15em'}} alt='Loading' />\r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport UserNav from '../../components/UserNav/UserNav';\r\nimport './MyFeeds.css';\r\n\r\n// loader\r\nimport Loader from '../../components/Loader';\r\nconst baseUrl = 'https://team-work-api.herokuapp.com/api/v1';\r\n\r\nclass MyFeeds extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading: true,\r\n            myFeeds: [],\r\n            myGifs : [],\r\n            token: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.getItem('token')\r\n\r\n        if(!token) {\r\n            window.location = 'http://localhost:3000/login';\r\n          }\r\n\r\n        fetch(`${baseUrl}/feed`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization': `bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    loading: false,\r\n                    myFeeds: data.data.articles,\r\n                    myGifs: data.data.gifs,\r\n                    token: token\r\n                })\r\n                console.log(this.state.myFeeds)\r\n                \r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                return NotificationManager.error('check your connection', 'Connection error!', 3000);\r\n        });\r\n    }\r\n\r\n\r\n    // delete article\r\n    handleArticleDelete = (id) => {\r\n       fetch(`${baseUrl}/articles/${id}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n              'authorization': `bearer ${this.state.token}`,\r\n              'Content-Type': 'application/json'\r\n          }\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        if(data.status === 'success') {\r\n            NotificationManager.success('Article deleted successfully', 'Successful!', 5000); \r\n            window.location = 'http://localhost:3000/posts';\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e)\r\n        return NotificationManager.error('check your connection', 'Connection error!', 3000);\r\n      });\r\n\r\n    }\r\n\r\n\r\n    // delete gif\r\n    handleGifDelete = (id) => {\r\n        fetch(`${baseUrl}/gifs/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'authorization': `bearer ${this.state.token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            if(data.status === 'success') {\r\n                NotificationManager.success('Gif deleted successfully', 'Successful!', 5000); \r\n                window.location = 'http://localhost:3000/posts';\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n            return NotificationManager.error('check your connection', 'Connection error!', 3000);\r\n        });\r\n        \r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        const { myFeeds, myGifs, loading } = this.state;\r\n\r\n        const id = parseInt(localStorage.getItem('id'))\r\n\r\n        return (\r\n            <div className='container' >\r\n                <UserNav />\r\n                <div className='right'>\r\n                    <div className='headers'>\r\n                        <h4>Articles</h4> | <h4>Gifs</h4>\r\n                    </div>\r\n                    <div className='article-container'>\r\n                        {loading ? <Loader /> : myFeeds === null ? <h1>There are no feeds</h1> :\r\n                        myFeeds.map((articles, i) => {\r\n                            if (articles.authorid === id) {\r\n                                return (\r\n                                    <div className='articles' key={i}>\r\n                                        <div className='article-properties'>\r\n                                            <Link to='/'><h3>{articles.title}</h3></Link>\r\n                                            <p>{articles.createdon}</p>\r\n                                        </div>\r\n                                        <article>\r\n                                            {articles.article}\r\n                                        </article>\r\n                                        <div className='options'>\r\n                                            <button className='btn update'>Edit</button>\r\n                                            <button className='btn delete' onClick={(e)=> {\r\n                                                e.preventDefault();\r\n                                                this.handleArticleDelete(articles.articleid);\r\n                                            }}>Delete</button>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </div>\r\n                    {/* gif area */}\r\n                    <div className='gif-container'>\r\n                        {myGifs.map((gifs, i) => {\r\n                            if (gifs.gifauthorid === id) {\r\n                                // if (gifs.length === 0) {\r\n                                //     return (\r\n                                //         <h1>NO gif available</h1>\r\n                                //     )\r\n                                // }\r\n                            \r\n                                    return (\r\n                                        <div className='gifs' key={i}>\r\n                                            <img src={gifs.image} alt='gif' className='gif-image' />\r\n                                            <div className='gif-properties'>\r\n                                                <h3>{gifs.giftitle}</h3>\r\n                                                <div>{gifs.gifcreatedon}</div>\r\n                                            </div>\r\n                                            <div className='option'>\r\n                                                <button className='btn delete' onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    this.handleGifDelete(gifs.gifid);\r\n                                                }}>Delete</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n\r\n                            }\r\n                        })}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default MyFeeds;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport UserNav from '../../components/UserNav/UserNav';\r\nimport './Timeline.css';\r\n\r\n// loader\r\nimport Loader from '../../components/Loader';\r\n\r\nconst baseUrl = 'https://team-work-api.herokuapp.com/api/v1';\r\n\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            articleFeeds: [],\r\n            gifFeeds: [],\r\n            token: ''\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.getItem('token')\r\n        // this.setState({\r\n        //     token: token\r\n        //   })\r\n       \r\n        fetch(`${baseUrl}/feed`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization': `bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    loading: false,\r\n                    articleFeeds: data.data.articles,\r\n                    gifFeeds: data.data.gifs\r\n                })\r\n\r\n            })\r\n            .catch(e => console.log(e));\r\n\r\n            // if (!token) {\r\n            //     window.location = 'http://localhost:3000/login';\r\n            // }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { articleFeeds, gifFeeds, loading } = this.state;\r\n\r\n        return (\r\n            <div className='container'>\r\n                <UserNav />\r\n                <div className='right'>\r\n                    <div className='headers'>\r\n                        <h4>Articles</h4> | <h4>Gifs</h4>\r\n                    </div>\r\n                    <div className='article-container'>\r\n\r\n                        {articleFeeds === null || loading ? (\r\n                            <Loader />) : (\r\n                                articleFeeds.map((articles, i) => {\r\n                                    return (\r\n                                        <div className='articles' key={i}>\r\n                                            <div className='article-properties'>\r\n                                                <Link to='/'><h3 className='article-title'>{articles.title}</h3></Link>\r\n                                                <p>{articles.createdon}</p>\r\n                                            </div>\r\n                                            <article>\r\n                                                {articles.article\r\n                                                }\r\n                                                {/* .length > 200 ?\r\n                                            `${articles.article.substr(0, 200)}...`\r\n                                        } */}\r\n                                            </article>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    {/* gif area */}\r\n                    <div className='gif-container'>\r\n                        {gifFeeds.map((gifs, i) => {\r\n                            return (\r\n\r\n                                <div className='gifs' key={i}>\r\n                                    <img src={gifs.image} alt='gif' className='gif-image' />\r\n                                    <div className='gif-properties'>\r\n                                        <h3>{gifs.giftitle}</h3>\r\n                                        <div>{gifs.gifcreatedon}</div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Timeline;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => {\r\n    return(\r\n        <main className='error-page'>\r\n              <p className='back-link'>\r\n              <Link to='/' >Go back to home page</Link>\r\n              </p>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React , { Component } from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { NotificationContainer } from 'react-notifications'; \r\nimport 'react-notifications/lib/notifications.css';\r\nimport LandingPage from '../Containers/LandingPage/LandingPage';\r\nimport Signup from '../Containers/Signup/Signup';\r\nimport Signin from '../Containers/Signin/Signin';\r\nimport CreateArticle from '../Containers/CreateArticle/CreateArticle';\r\nimport GifUpload from '../Containers/GifUpload/GifUpload';\r\nimport MyFeeds from '../Containers/MyFeeds/MyFeeds';\r\n// import ProfilePage from '../Containers/ProfilePage/ProfilePage';\r\nimport Timeline from '../Containers/Timeline/Timeline';\r\nimport NotFound from '../components/NotFound/NotFound';\r\n\r\nclass Routes extends Component {\r\n    render () {\r\n        return(\r\n            <Router>\r\n            <div>\r\n            <Switch>\r\n             <Route exact path='/' component={LandingPage} />\r\n             <Route path='/register' component={Signup} />\r\n             <Route path='/login' component={Signin} />\r\n             <Route path='/article' component={CreateArticle} />\r\n             <Route path='/gif' component={GifUpload} />\r\n             <Route path='/posts' component={MyFeeds} />\r\n             {/* <Route path='/profile' component={ProfilePage} /> */}\r\n             <Route path='/feeds' component={Timeline} />\r\n             <Route component={NotFound} />\r\n             </Switch>\r\n             <NotificationContainer />\r\n            </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;","import React, { Component } from 'react';\r\nimport Routes from './routes/routes';\r\n// import ViewGif from './Containers/ViewGif/ViewGif';\r\nimport Loader from './components/Loader';\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <Routes />\r\n      // <ViewGif />\r\n      // <Loader />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}